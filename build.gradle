plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor // 컴파일 시 annotationProcessor 사용
    }
}

repositories { // gradle 이 라이브러리를 다운로드하는 위치
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok' // configurations 에서 사용하기 위해 compileOnly 등록
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok' // annotationProcessor 정의
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // guava 는 코어 라이브러리로 collection, caching, string processing 등을 할 때 코드를 간결하게 해주는 라이브러리
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'

}

tasks.named('test') {
    useJUnitPlatform()
}
